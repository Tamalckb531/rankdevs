export const leetcodeQuery = `query userProfile($username: String!) { allQuestionsCount { difficulty count } userContestRanking(username: $username) { attendedContestsCount rating topPercentage } matchedUser(username: $username) { contributions { points } profile { ranking } submitStatsGlobal { acSubmissionNum { difficulty count submissions} totalSubmissionNum {difficulty count submissions} } } }`;

export const githubQuery = `query GitHubStats($username: String!, $from: DateTime!, $to: DateTime!) { user(login: $username) { contributionsCollection(from: $from, to: $to) { contributionCalendar { totalContributions } } pullRequests(states: MERGED) { totalCount } reposForStarFork: repositories(first: 100, ownerAffiliations: OWNER) { pageInfo { hasNextPage endCursor } nodes { stargazerCount forkCount } } reposForLang: repositories(first: 10, ownerAffiliations: OWNER, orderBy: {field: PUSHED_AT, direction: DESC}) { nodes { languages(first: 10, orderBy: {field: SIZE, direction: DESC}) { edges { size node { name } } } } } latestRepoActivity: repositories(first: 1, ownerAffiliations: OWNER, orderBy: {field: PUSHED_AT, direction: DESC}) { nodes { pushedAt name } } pinnedItems(first: 3, types: REPOSITORY) { nodes { ... on Repository { name } } } } }`;
